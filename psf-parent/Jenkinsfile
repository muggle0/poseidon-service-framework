pipeline {
  agent any
  stages {

    stage('checkout') {
        steps {
            checkout([$class: 'GitSCM',
                      branches: [[name: 'master']],
                      userRemoteConfigs: [[url: 'git@e.coding.net:muggle0/poseidon/poseidon-service-framework.git']]])
        }
    }

    stage('init') {
     steps {
        script {
            if (isUnix()) {
                def tags = sh(returnStdout: true, script: 'git describe  --tags').trim()
                env.TAG=tags
            }else{
                 def latestTag = bat(script: 'git describe --abbrev=0 --tags', returnStdout: true).trim()[1]
                 echo "Latest Git Tag: ${latestTag}"
                 env.TAG=latestTag
            }
        }
     }
    }
    stage('compile') {
      steps {
         script {
            if (isUnix()) {
             withMaven(jdk:'jdk8',maven: 'maven') {
                sh 'mvn clean install -f ./psf-parent -s ./doc/settings.xml'
             }
            } else {
              withMaven(jdk:'jdk8',maven: 'maven') {
                bat 'mvn clean install -f ./psf-parent -s ./doc/settings.xml'
             }
            }
         }
      }
    }
    stage('tag version') {
        steps {
            script {
                if (isUnix()) {
                    sh "mvn versions:set -DnewVersion=${env.TAG} -f ./psf-parent"
                }else{
                     bat "mvn versions:set -DnewVersion=${env.TAG} -f ./psf-parent"
                }
            }
        }
    }
    stage('deploy') {
        steps {
            script {
               if (isUnix()) {
                withMaven(jdk:'jdk8',maven: 'maven') {
                   sh 'mvn deploy -f ./psf-parent -s ./doc/settings.xml'
                }
               } else {
                 withMaven(jdk:'jdk8',maven: 'maven') {
                   bat 'mvn deploy -f ./psf-parent -s ./doc/settings.xml'
                }
               }
            }
        }
    }
  }
}